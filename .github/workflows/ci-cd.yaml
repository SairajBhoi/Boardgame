name: Build and Deploy to EKS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REPO: ${{ secrets.ECR_REPO }}
      IMAGE_TAG: latest
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
      SONAR_PROJECT_NAME: ${{ secrets.SONAR_PROJECT_NAME }}

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

    

      #  Configure AWS credentials (optional for EC2 with IAM role)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${AWS_ACCOUNT_ID}:role/github-runner
          aws-region: ${{ secrets.AWS_REGION }}

      # Login to Amazon ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO

      # Build and Push Docker image
      - name: Build and Push Docker image
        run: |
          docker build -t $ECR_REPO:$IMAGE_TAG .
          docker push $ECR_REPO:$IMAGE_TAG

      #  Deploy to EKS
      - name: Deploy to EKS
        run: |
          # Install kubectl
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          # Update kubeconfig
          aws eks update-kubeconfig --region $AWS_REGION --name ${{ secrets.EKS_CLUSTER_NAME }}
          # Apply Kubernetes manifests
          kubectl apply -f k8s/app/boardgame-deployment.yaml
          kubectl apply -f k8s/app/boardgame-Service.yaml