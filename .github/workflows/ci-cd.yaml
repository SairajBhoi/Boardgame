name: Build and Deploy to EKS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REPO: ${{ secrets.ECR_REPO }}
      IMAGE_TAG: latest
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      # # Debug Runner Environment
      # - name: Debug Runner Environment
      #   run: |
      #     whoami
      #     echo $PATH
      #     aws sts get-caller-identity  
      #     docker --version 

      - name: Check AWS Identity
        run: |
          curl -s http://169.254.169.254/latest/meta-data/iam/security-credentials/
          aws sts get-caller-identity

      # Login to Amazon ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO

      # Build and Push Docker image
      - name: Build and Push Docker image
        run: |
          docker build -t $ECR_REPO:$IMAGE_TAG .
          docker push $ECR_REPO:$IMAGE_TAG

      # Deploy to EKS
      - name: Deploy to EKS
        run: |
          # Install kubectl
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          # Update kubeconfig
          aws eks update-kubeconfig --region $AWS_REGION --name ${{ secrets.EKS_CLUSTER_NAME }}
          # Apply Kubernetes manifests
          kubectl apply -f ${{ github.workspace }}k8s/manifests/app/boardgame-deployment.yaml
          kubectl apply -f ${{ github.workspace }}k8s/manifests/app/boardgame-Service.yaml